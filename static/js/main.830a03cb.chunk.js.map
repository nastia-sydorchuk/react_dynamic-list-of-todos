{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectTodo","selectedTodo","className","map","todo","classnames","id","completed","title","type","onClick","TodoFilter","selectValue","setSelectValue","setAppliedQuery","useState","query","setQuery","applyQuery","useCallback","debounce","value","onChange","event","target","all","active","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","getTodos","Loader","TodoModal","unselectTodo","user","setUser","useEffect","userId","loadedUser","href","email","name","App","setTodos","isLoading","setIsLoading","shownTodo","setShownTodo","appliedQuery","todosFromServer","filterBySelect","filter","useMemo","a","toLowerCase","includes","param","shuffle","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.830a03cb.chunk.js","sourcesContent":["export enum Filter {\n  all = 'All',\n  completed = 'Completed',\n  active = 'Active',\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todoId: number) => void,\n  selectedTodo: number | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classnames(\n              { 'has-background-info-light': selectedTodo === todo.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classnames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classnames(\n                      'far',\n                      { 'fa-eye': selectedTodo !== todo.id },\n                      { 'fa-eye-slash': selectedTodo === todo.id },\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { debounce } from 'lodash';\nimport React, { useCallback, useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  selectValue: string,\n  setSelectValue: (param: string) => void,\n  setAppliedQuery: (appliedQuery: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectValue, setSelectValue, setAppliedQuery,\n}) => {\n  const [query, setQuery] = useState('');\n\n  const applyQuery = useCallback(debounce(setAppliedQuery, 1000), []);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(event) => setSelectValue(event.target.value)}\n          >\n            <option value={Filter.all}>{Filter.all}</option>\n            <option value={Filter.active}>{Filter.active}</option>\n            <option value={Filter.completed}>{Filter.completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n            applyQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n                setAppliedQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  unselectTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, unselectTodo }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(loadedUser => setUser(loadedUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => unselectTodo()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useMemo, useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { shuffle } from 'lodash';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [shownTodo, setShownTodo] = useState<number | null>(null);\n  const [selectValue, setSelectValue] = useState<string>(Filter.all);\n  const [appliedQuery, setAppliedQuery] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filterBySelect = (todosFromServer: Todo[]) => {\n    return todosFromServer.filter((todo: Todo) => {\n      switch (selectValue) {\n        case Filter.completed: return todo.completed;\n        case Filter.active: return !todo.completed;\n        default: return todo;\n      }\n    });\n  };\n\n  useMemo(async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(filterBySelect(todosFromServer));\n  }, [selectValue]);\n\n  useMemo(async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer.filter((todo: Todo) => {\n      return todo.title.toLowerCase().includes(appliedQuery.toLowerCase());\n    }));\n  }, [appliedQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectValue={selectValue}\n                setSelectValue={(param: string) => setSelectValue(param)}\n                setAppliedQuery={setAppliedQuery}\n              />\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setTodos(shuffle(todos))}\n              >\n                Randomize\n              </button>\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={todos}\n                selectedTodo={shownTodo}\n                selectTodo={(todoId) => setShownTodo(todoId)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {shownTodo && (\n        <TodoModal\n          todo={todos[shownTodo - 1]}\n          unselectTodo={() => setShownTodo(null)}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}